-- ************************* SqlDBM: PostgreSQL *************************
-- ***** Generated by SqlDBM: superstore, v9 by usikovone@gmail.com *****



DROP SCHEMA IF EXISTS superstore_schema CASCADE;
CREATE SCHEMA superstore_schema;
COMMENT ON SCHEMA superstore_schema IS 'Schema for practice purposes with Tableau Superstore dataset';



DROP TABLE IF EXISTS superstore_schema.dim_ship_mode;
DROP TABLE IF EXISTS superstore_schema.dim_ship_geo;
DROP TABLE IF EXISTS superstore_schema.dim_ship;
DROP TABLE IF EXISTS superstore_schema.dim_calendar;
DROP TABLE IF EXISTS superstore_schema.dim_customers_segments;
DROP TABLE IF EXISTS superstore_schema.dim_customers;
DROP TABLE IF EXISTS superstore_schema.dim_prod_cat;
DROP TABLE IF EXISTS superstore_schema.dim_prod_subcat;
DROP TABLE IF EXISTS superstore_schema.dim_prod;
DROP TABLE IF EXISTS superstore_schema.fact_sales;



-- ************************************** superstore_schema.dim_ship_mode

CREATE TABLE IF NOT EXISTS superstore_schema.dim_ship_mode
(
 shipmode_id   int NOT NULL,
 shipmode_name varchar(20) NOT NULL,
 CONSTRAINT PK_SHIPMODE PRIMARY KEY ( shipmode_id )
);



-- ************************************** superstore_schema.dim_ship_geo

CREATE TABLE IF NOT EXISTS superstore_schema.dim_ship_geo
(
 geo_id  serial NOT NULL,
 country varchar(30) NOT NULL,
 "state"   varchar(30) NOT NULL,
 city    varchar(30) NOT NULL,
 postal  varchar(10),
 region  varchar(30) NOT NULL,
 CONSTRAINT PK_GEO PRIMARY KEY ( geo_id )
);



-- ************************************** superstore_schema.dim_ship

CREATE TABLE IF NOT EXISTS superstore_schema.dim_ship
(
 shipping_id serial NOT NULL,
 shipmode_id int NOT NULL,
 geo_id      int NOT NULL,
 address     varchar(200) NULL,
 CONSTRAINT PK_SHIPPING PRIMARY KEY ( shipping_id ),
 CONSTRAINT FK_SHIP_GEO FOREIGN KEY ( geo_id ) REFERENCES superstore_schema.dim_ship_geo ( geo_id ),
 CONSTRAINT FK_SHIP_SHIPMODE FOREIGN KEY ( shipmode_id ) REFERENCES superstore_schema.dim_ship_mode ( shipmode_id )
);

CREATE INDEX FK_SHIP_SHIPGEO ON superstore_schema.dim_ship
(
 geo_id
);

CREATE INDEX FK_SHIP_SHIPMODE ON superstore_schema.dim_ship
(
 shipmode_id
);



-- ************************************** superstore_schema.dim_calendar

CREATE TABLE IF NOT EXISTS superstore_schema.dim_calendar
(
 "date"     date NOT NULL,
 year     int NOT NULL,
 quarter  int NOT NULL,
 month    int NOT NULL,
 week     int NOT NULL,
 week_day int NOT NULL,
 CONSTRAINT PK_CALENDAR PRIMARY KEY ( "date" )
);



-- ************************************** superstore_schema.dim_customers_segments

CREATE TABLE IF NOT EXISTS superstore_schema.dim_customers_segments
(
 cust_segment_id int NOT NULL,
 segment_name    varchar(50) NOT NULL,
 discount_base   decimal NULL,
 CONSTRAINT PK_CUSTSEGMENTS PRIMARY KEY ( cust_segment_id )
);



-- ************************************** superstore_schema.dim_customers

CREATE TABLE IF NOT EXISTS superstore_schema.dim_customers
(
 customer_id     serial NOT NULL,
 customer_name   varchar(50) NOT NULL,
 cust_segment_id int NOT NULL,
 CONSTRAINT PK_CUSTOMERS PRIMARY KEY ( customer_id ),
 CONSTRAINT FK_CUSTOMER_CUSTSEG FOREIGN KEY ( cust_segment_id ) REFERENCES superstore_schema.dim_customers_segments ( cust_segment_id )
);

CREATE INDEX FK_CUST_CSEGM ON superstore_schema.dim_customers
(
 cust_segment_id
);



-- ************************************** superstore_schema.dim_prod_cat

CREATE TABLE IF NOT EXISTS superstore_schema.dim_prod_cat
(
 cat_id   int NOT NULL,
 cat_name varchar(50) NOT NULL,
 CONSTRAINT PK_CAT PRIMARY KEY ( cat_id )
);



-- ************************************** superstore_schema.dim_prod_subcat

CREATE TABLE IF NOT EXISTS superstore_schema.dim_prod_subcat
(
 subcat_id   int NOT NULL,
 subcat_name varchar(50) NOT NULL,
 cat_id      int NOT NULL,
 CONSTRAINT PK_SUBCAT PRIMARY KEY ( subcat_id ),
 CONSTRAINT FK_SUBCAT_CAT FOREIGN KEY ( cat_id ) REFERENCES superstore_schema.dim_prod_cat ( cat_id )
);

CREATE INDEX FK_SUBCAT_CAT ON superstore_schema.dim_prod_subcat
(
 cat_id
);



-- ************************************** superstore_schema.dim_prod

CREATE TABLE IF NOT EXISTS superstore_schema.dim_prod
(
 product_id   varchar(50) NOT NULL,
 subcat_id    int NOT NULL,
 product_name varchar(150) NOT NULL,
 description  varchar(250) NULL,
 CONSTRAINT PK_PRODUCT PRIMARY KEY ( product_id ),
 CONSTRAINT FK_PRODUCT_SUBCAT FOREIGN KEY ( subcat_id ) REFERENCES superstore_schema.dim_prod_subcat ( subcat_id )
);

CREATE INDEX FK_PROD_CAT ON superstore_schema.dim_prod
(
 subcat_id
);



-- ************************************** superstore_schema.fact_sales

CREATE TABLE IF NOT EXISTS superstore_schema.fact_sales
(
 row_id         int NOT NULL,
 order_id       int NOT NULL,
 shipping_id    int NOT NULL,
 product_id     varchar(50) NOT NULL,
 customer_id    int NOT NULL,
 ship_date      date NOT NULL,
 order_date     date NOT NULL,
 sales_amount   decimal NOT NULL,
 profit         decimal NOT NULL,
 quantity       int NOT NULL,
 total_discount decimal NOT NULL,
 CONSTRAINT PK_SALES PRIMARY KEY ( row_id ),
 CONSTRAINT FK_SALES_CUSTOMER FOREIGN KEY ( customer_id ) REFERENCES superstore_schema.dim_customers ( customer_id ),
 CONSTRAINT FK_SALES_CALEND_ORDER FOREIGN KEY ( order_date ) REFERENCES superstore_schema.dim_calendar ( "date" ),
 CONSTRAINT FK_SALES_CALEND_SHIP FOREIGN KEY ( ship_date ) REFERENCES superstore_schema.dim_calendar ( "date" ),
 CONSTRAINT FK_SALES_PRODUCT FOREIGN KEY ( product_id ) REFERENCES superstore_schema.dim_prod ( product_id ),
 CONSTRAINT FK_SALES_SHIP FOREIGN KEY ( shipping_id ) REFERENCES superstore_schema.dim_ship ( shipping_id )
);

CREATE INDEX FK_SALES_CUSTOMER ON superstore_schema.fact_sales
(
 customer_id
);

CREATE INDEX FK_SALES_DATE_ORDER ON superstore_schema.fact_sales
(
 order_date
);

CREATE INDEX FK_SALES_DATE_SHIP ON superstore_schema.fact_sales
(
 ship_date
);

CREATE INDEX FK_SALES_PRODUCT ON superstore_schema.fact_sales
(
 product_id
);

CREATE INDEX FK_SALES_SHIPPING ON superstore_schema.fact_sales
(
 shipping_id
);
